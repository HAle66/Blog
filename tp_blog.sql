/*
Navicat MySQL Data Transfer

Source Server         : root
Source Server Version : 80012
Source Host           : 127.0.0.1:3306
Source Database       : tp_blog

Target Server Type    : MYSQL
Target Server Version : 80012
File Encoding         : 65001

Date: 2020-08-31 11:41:03
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for tp_admin
-- ----------------------------
DROP TABLE IF EXISTS `tp_admin`;
CREATE TABLE `tp_admin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL COMMENT '管理员用户',
  `password` varchar(20) NOT NULL COMMENT '密码',
  `nickname` varchar(20) NOT NULL COMMENT '昵称',
  `email` varchar(20) DEFAULT NULL COMMENT '邮箱',
  `status` varchar(255) NOT NULL DEFAULT '0' COMMENT '状态',
  `is_super` varchar(255) DEFAULT '0' COMMENT '超级管理员',
  `create_time` int(11) NOT NULL COMMENT '注册时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '软删除',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_admin
-- ----------------------------
INSERT INTO `tp_admin` VALUES ('1', 'admin', 'admin', 'admin', '945173351@qq.com', '1', '1', '2020', '1598108608', null);
INSERT INTO `tp_admin` VALUES ('2', 'admin02', '123456', '鸣人', 'mingren@163.com', '1', '0', '1595753344', '1595940900', null);
INSERT INTO `tp_admin` VALUES ('3', 'admin03', '111', 'nike', '945173351@qq.com', '0', '0', '1595755685', '1595755685', null);
INSERT INTO `tp_admin` VALUES ('4', 'admin01', '123', 'zz', '945173351@qq.com', '0', '0', '1595755907', '1595755907', null);
INSERT INTO `tp_admin` VALUES ('5', 'admin04', '123', 'qq', '945173351@qq.com', '0', '0', '1595756161', '1595998390', '1595998390');
INSERT INTO `tp_admin` VALUES ('6', 'admin05', '123', 'ww', '945173351@qq.com', '0', '0', '1595756573', '1595756573', null);
INSERT INTO `tp_admin` VALUES ('7', 'admin11', 'admin11', 'admin11', 'admin11@163.com', '0', '0', '1595939445', '1595939445', null);
INSERT INTO `tp_admin` VALUES ('8', 'uuu', 'uuu', 'uuu', '156486@qq.com', '0', '0', '1597830479', '1597830560', '1597830560');
INSERT INTO `tp_admin` VALUES ('9', 'zheng', 'zheng', 'zheng', 'zheng@163.com', '0', '0', '1597830508', '1597830508', null);

-- ----------------------------
-- Table structure for tp_article
-- ----------------------------
DROP TABLE IF EXISTS `tp_article`;
CREATE TABLE `tp_article` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章标题',
  `author` varchar(20) NOT NULL,
  `desc` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '概要',
  `tag` varchar(100) NOT NULL COMMENT '标签',
  `click` int(11) NOT NULL DEFAULT '0',
  `comm_num` int(11) NOT NULL DEFAULT '0',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '内容',
  `is_top` enum('0','1') CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '0' COMMENT '‘0’是未推荐，‘1’是已推荐',
  `cate_id` int(11) NOT NULL COMMENT '所属导航',
  `create_time` int(11) NOT NULL COMMENT '添加时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '删除时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_article
-- ----------------------------
INSERT INTO `tp_article` VALUES ('1', 'Linux下搭建PHP环境', 'zjh', 'Linux，php', 'php|zjh', '21', '0', '我们要在Linux上搭建PHP环境,我们就需要知道我们要安装什么软件，首先需要一个WEB服务器软件，Apache是我们的首选；既然运行PHP，就需要PHP；然后我们还需要一个存放数据的数据库，MySQL、MongoDB、MariaDB都是不错的，这里我们选择使用Mysql；到这里我们确定了我们需要安装的软件，Apache、PHP、MySQL。现在我们在根目录下创建俩个文件夹，分别是dreamphp、softwore，dreamphp是软件的安装目录，softwore是软件的下载目录。相信大家都会使用创建文件夹的命令：mkdir /dreamphp\n\n一、  Apache安装\n我们去Apache的官方网站下载我们需要的Apache版本，目前最新版是2.4.29，我们就下载最新版的，下载地址很多，我们随便选一个：http://mirror.bit.edu.cn/apache//httpd/httpd-2.4.29.tar.gz。\n\n然后看Apache的文档，安装Apache需要6个条件，我们分别列出来。\n\n1)     APR和APR-Util\n\n2)     Pcre\n\n3)     至少50M空间\n\n4)     编译器\n\n5)     服务器时间保持准确\n\n6)     （可选）perl\n\n最后一项是可选，我们就不安装了，至少50M空间，我们的服务器也是满足的，服务器时间准确，也满足，也就是最后只剩下编译器、APR、APR-Util、Pcre这4个即可。编译器我们直接用yum命令进行安装，顺便也把openssl、zlib、bzip2一起安装了。\n\n1.1编译器安装（openssl、zlib、bzip2）\n安装命令：yum install –y gcc gcc-c++ openssl-devel zlib-defel bzip2\n\n1.2APR安装\n1)     进入下载软件的文件夹，就是我们前面创建的softwore，命令：cd /softwore\n\n2)     下载APR，Apache官网提供下载地址，下载命令：wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-1.6.3.tar.gz\n\n3)     解压APR，命令：tar zxvf apr-1.6.3.tar.gz\n\n4)     进入解压目录，命令：cd apr-1.6.3\n\n5)     配置apr的安装目录，命令：./configure –prefix=/usr/local/apr\n\n6)     编译和安装，命令：make && make install\n\n1.3APR-Util安装\napr-util不在捆绑expat了，所以我们需要先安装expat。\n\n1.3.1安装expat\n\n1)     进入软件下载文件夹softwore，命令：cd /softwore\n\n2)     下载expat，自行百度地址，下载命令：wget https://jaist.dl.sourceforge.net/project/expat/expat/2.2.5/expat-2.2.5.tar.bz2\n\n3)     解压expat，命令：tar jxf expat-2.2.5.tar.bz2\n\n4)     进入解压目录，命令：tar expat-2.2.5\n\n5)     配置安装目录，命令：./configure –prefix=/usr/local/expat\n\n6)     编译和安装，命令：make && make install\n\n1.3.2安装apr-util\n\n1)     进入下载软件的文件夹softwore，命令cd /softwore\n\n2)     下载APR-Util，Apache官网也有下载地址：下载命令：wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-util-1.6.1.tar.gz\n\n3)     解压APR-Util，命令：tar zxvf apr-util-1.6.1.tar.gz\n\n4)     进入解压目录，命令：cd /apr-util-1.6.1.tar.gz\n\n5)     配置安装目录，并声明apr和expat的安装目录，命令：./configure –prefix=/usr/local/apr-util –with-apr=/usr/local/apr –with-expat=/usr/local/expat\n\n6)     编译和安装，命令：make && make install\n\n1.4安装pcre\n1)     进入下载软件文件夹softwore，命令：cd /softwore\n\n2)     下载pcre，命令：wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz\n\n3)     解压pcre，命令：tar zxvf pcre-8.41.tar.gz\n\n4)     进入解压目录，命令：cd pcre-8.41\n\n5)     配置pcre安装目录，命令：./configure –prefix=/usr/local/pcre\n\n6)     编译和安装，命令：make && make install\n\n到这里Apache所需的依赖我们全部安装完了，现在就可以进行Apache的安装了。\n\n1.5安装Apache\n1)     进入下载软件文件夹softwore，命令：cd /softwore\n\n2)     下载Apache，命令：wget http://mirrors.hust.edu.cn/apache//httpd/httpd-2.4.29.tar.gz\n\n3)     解压Apache，命令：tar zxvf httpd-2.4.29.tar.gz\n\n4)     进入解压目录，命令：cd httpd-2.4.29\n\n5)     配置安装目录，并声明apr、apr-util、pcre的安装目录，再静态安装所有模块，命令：./configure –prefix=/dreamphp/apache –with-apr=/usr/local/apr –with-apr-util=/usr/local/apr-util –with-pcre=/usr/local/pcre –enable-mods-shared=all\n\n6)     编译并安装，命令：make && make install\n\n到这里Apache就安装完成了，加入环境变量和配置开机启动，我们这里就不说了，我们就说一下配置Apache文件，启动测试一下。\n\n二、安装PHP\n        PHP会在以后开启很多扩展，这些扩展需要的依赖又非常多，我给大家总结了一下大概的依赖库，大家直接yum安装即可，命令如下：yum -y install gcc gcc-c++ autoconf automake libtool re2c flex bison php-mcrypt libmcrypt libmcrypt-devel openssl-devel libxml2-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel zlib-devel mcrypt bzip2-devel libicu-devel systemd-devel mhash postgresql-devel libxslt libxslt-devel\n现在我们就开始PHP的安装。\n\n1)            进入软件下载目录softwore，命令：cd /softwore\n\n2)            下载PHP，命令：wget http://au2.php.net/distributions/php-7.2.3.tar.gz\n\n3)            解压PHP，命令：tar zxvf php-7.2.3.tar.gz\n\n4)            进入解压目录，命令：cd php-7.2.3\n\n5)       配置PHP安装目录，并动态加载PHP，在安装PHP扩展，命令如下：./configure –prefix=/dreamphp/php –with-apxs2=/dreamphp/apache/bin/apxs –with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-openssl --with-pcre-regex --with-pdo-mysql --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --with-mhash --enable-fpm --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip --enable-mysqlnd\n6)            编译并安装，命令：make && make install\n\n经过漫长的等待，就会安装完成，自己需要安装哪些扩展或者开启哪些扩展自行配置。安装完成以后会提示我们将php.ini复制到我们的PHP安装目录，自行复制即可。\n\n7)            让apache支持PHP，搜索mime_module,大概在380行到427行都是这个配置。\n\n8)            将PHP加入环境变量自行设置\n\n到这里PHP就安装完成了。\n\n三、安装MySQL\n      MySQL的需要numactl，当然你的机器可能装了这个依赖，没有装的执行以下yum安装命令：yum install –y numactl\n\n开始安装MySQL：\n\n1)     进入软件安装目录softwore，命令：cd /softwore\n\n2)     下载MySQL，命令：wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz\n\n3)     解压MySQL，命令：tar zxvf mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz\n\n4)     修改解压文件名字为mysql，命令：mv mysqll-5.7.21-linux-glibc2.12-x86_64.tar.gz mysql\n\n5)     移动或者复制mysql到/dreamphp下面，命令：mv mysql /dreamphp/mysql\n\n6)     创建一个mysql的用户和用户组，命令：groupadd mysql;useradd –g –r mysql mysql\n\n7)     修改mysql文件夹的所属，命令：chown –R mysql:mysql /dreamphp/mysql\n\n8)     执行初始化命令，命令：./mysqld –initialize –user=mysql –basedir=/dreamphp/mysql –datadir=/dreamphp/mysql/data\n\n9)     初始化完成会生成一个初始化密码，记住次密码，待会修改成自己希望的密码\n\n10)  下面也是一样，设置环境变量，设置开机启动什么的，自行百度。\n\n \n\n到这里Linux下PHP环境就完全搭建好了，步骤详细无比了，相信是个新手都可以自信配置环境了。', '1', '1', '1595855236', '1596002788', null);
INSERT INTO `tp_article` VALUES ('2', 'php01', 'zjh', 'php01', 'php01', '12', '0', '<p>php01</p>', '1', '7', '1595855299', '1598091868', '1598091868');
INSERT INTO `tp_article` VALUES ('6', 'PHP 基础知识总结', 'zjh', '\r\n    PHP 代表 PHP: Hypertext Preprocessor\r\n    PHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码\r\n    PHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器\r\n    PHP 文件的默认文件扩展名是 \".php\"\r\n', 'php', '4', '0', '<h2>PHP能做什么</h2><ul class=\" list-paddingleft-2\"><li><p>PHP 可以生成动态页面内容<br/></p></li><li><p>PHP 可以创建、打开、读取、写入、关闭服务器上的文件<br/></p></li><li><p>PHP 可以收集表单数据<br/></p></li><li><p>PHP 可以发送和接收 cookies<br/></p></li><li><p>PHP 可以添加、删除、修改您的数据库中的数据<br/></p></li><li><p>PHP 可以限制用户访问您的网站上的一些页面<br/></p></li><li><p>PHP 可以加密数据</p></li></ul><h2>安装</h2><p>如果您的服务器不支持 PHP，您必须：</p><ol class=\" list-paddingleft-2\"><li><p>安装 Web 服务器<br/></p></li><li><p>安装 PHP<br/></p></li><li><p>安装数据库，比如 MySQL<br/>官方 PHP 网站（PHP.net）有 PHP 的安装说明： <a href=\"http://php.net/manual/en/install.php\">http://php.net/manual/en/install.php</a></p></li></ol><p><strong>集成开发环境推荐 WAMP：<a href=\"http://www.wampserver.com/\">http://www.wampserver.com/</a></strong></p><p><br/></p>', '0', '1', '1598106924', '1598106924', null);
INSERT INTO `tp_article` VALUES ('5', 'PHP 基础知识总结', 'zjh', 'php概要', 'php', '0', '0', '<p>php<br/></p>', '1', '1', '1598106641', '1598106654', '1598106654');
INSERT INTO `tp_article` VALUES ('7', 'Windows下搭建环境', 'zjh', 'PHP集成开发环境有很多，如XAMPP、AppServ......只要一键安装就把PHP环境给搭建好了。但这种安装方式不够灵活，软件的自由组合不方便，同时也不利于学习。所以我还是喜欢手工搭建PHP开发环境，需要哪个模块自己安装就行了，或者那个软件需要升级，直接升级那个软件就行了，并不影响其他软件，非常方便。\r\n\r\n ', 'php', '2', '0', '<p><strong><span style=\"font-size: 14pt;\">一、准备工作-下载所需软件</span></strong></p><ul class=\" list-paddingleft-2\"><li><p>Apache&nbsp; <a href=\"http://apache.etoak.com//httpd/binaries/win32/httpd-2.2.22-win32-x86-openssl-0.9.8t.msi\">httpd-2.2.22-win32-x86-openssl-0.9.8t.msi</a></p></li><li><p>PHP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"http://windows.php.net/downloads/releases/php-5.3.10-Win32-VC9-x86.zip\">php-5.3.10-Win32-VC9-x86.zip</a></p></li><li><p>MySQL&nbsp;&nbsp; <a href=\"http://mysql.mirror.kangaroot.net/Downloads/MySQL-5.5/mysql-5.5.20-win32.msi\">mysql-5.5.20-win32.msi</a></p></li></ul><p>&nbsp;</p><p>　　<strong><span style=\"font-size: 14pt;\">二、安装软件</span></strong></p><p>　　　　<strong><span style=\"color: #008000;\">安装Apache</span></strong>: 双击安装，与安装其他Windows软件没有什么区别，在填Server Infomation时，并没有特殊规定，只要输入的信息符合格式即可。</p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620544829.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620553361.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620554265.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620555230.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620560244.png\" alt=\"\"/></p><p>　　　　安装完成之后，在浏览器输入http://localhost，如果显示It Works!，表示Apache安装成功。</p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020620583012.png\" alt=\"\"/></p><p>&nbsp;</p><p>　　　　<strong><span style=\"color: #008000;\">安装PHP</span></strong>:将php-5.3.10-Win32-VC9-x86.zip解压到一个目录即可。</p><p>　　</p><p>　　　　<span style=\"color: #008000;\"><strong>安装MySQL</strong></span>:双击安装，如果需要更改安装目录，则在Choose Setup Type选择Custom</p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020621052832.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020621062017.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020621064375.png\" alt=\"\"/></p><p>　　　　安装完成后开始配置MySQL，全部保持默认选项即可，但最好把MySQL默认编码改为utf8，在Modify Security Settings选项中设置密码，输入两次密码即可完成，最后点Execute完成配置。</p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020621105636.png\" alt=\"\"/></p><p><img src=\"https://pic002.cnblogs.com/images/2012/330389/2012020621111596.png\" alt=\"\"/></p><p>&nbsp;</p><p>　　<span style=\"font-size: 14pt;\"><strong>三、整合Apache+PHP+MySQL</strong></span></p><p>　　　　Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。</p><p>&nbsp;</p><p>　　　　1. 让Apache可以解析php文件，在配置文件中找到</p><p>　　　　　　　　#LoadModule vhost_alias_module modules/mod_vhost_alias.so</p><p>　　　　　 在下一行添加 (绿色的位置是根据PHP的所在目录而定的)</p><p>　　　　　　　　LoadModule php5_module &quot;<strong><span style=\"color: #008000;\">D:/Develop/PHP/php5apache2_2.dll</span></strong>&quot;<br/>　　　　　　　　PHPIniDir &quot;<strong><span style=\"color: #008000;\">D:/Develop/PHP</span></strong>&quot;<br/>　　　　　　　　AddType application/x-httpd-php .php .html .htm</p><p>&nbsp;</p><p>　　　　2. 在配置文件中找到</p><p>　　　　　　　　DirectoryIndex index.html</p><p>　　　　　 改为</p><p>　　　　　　　　DirectoryIndex <strong><span style=\"color: #008000;\">index.php</span></strong> index.html</p><p>&nbsp;</p><p>　　　　3. 修改Apache站点目录，在配置文件中找到(Apache安装的目录不同，显示的值不一样)</p><p>　　　　　　　　DocumentRoot &quot;<strong><span style=\"color: #008000;\">D:/Develop/Apache2.2/htdocs</span></strong>&quot;</p><p>　　　　　　改为</p><p>　　　　　　　　DocumentRoot &quot;<strong><span style=\"color: #008000;\">D:/Workspace/PHP</span></strong>&quot;</p><p>　　　　　　</p><p>　　　　　　再找到</p><p>　　　　　　　　&lt;Directory &quot;<strong><span style=\"color: #008000;\">D:/Develop/Apache2.2/htdocs</span></strong>&quot;&gt;</p><p>　　　　　　改为</p><p>　　　　　　　　&lt;Directory &quot;<strong><span style=\"color: #008000;\">D:/Workspace/PHP</span></strong>&quot;&gt;　　</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>　　　　PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini</p><p>&nbsp;</p><p>　　　　　　1. 设置PHP扩展包的具体目录，找到</p><p>　　　　　　　　; On windows:<br/>　　　　　　　　; extension_dir = &quot;ext&quot;</p><p>　　　　　　改为 (值是ext文件夹的目录)</p><p>　　　　　　　　; On windows:<br/>　　　　　　　　&nbsp; extension_dir = &quot;<strong><span style=\"color: #008000;\">D:/Develop/PHP/ext</span></strong>&quot;</p><p>&nbsp;</p><p>　　　　　　2. 开启相应的库功能，找到需要开启的库的所在行</p><p>　　　　　　　　;extension=php_curl.dll</p><p>　　　　　　　　;extension=php_gd2.dll</p><p>　　　　　　　　;extension=php_mbstring.dll</p><p>　　　　　　　　;extension=php_mysql.dll</p><p>　　　　　　　　;extension=php_xmlrpc.dll</p><p>　　　　　　 &nbsp; 去掉前面的分号(注释)，即改为</p><p>　　　　　　　　extension=php_curl.dll</p><p>　　　　　　　　extension=php_gd2.dll</p><p>　　　　　　　　extension=php_mbstring.dll</p><p>　　　　　　　　extension=php_mysql.dll</p><p>　　　　　　　　extension=php_xmlrpc.dll</p><p>　　　　　　</p><p>　　　　　　3. 设置时区，找到</p><p>　　　　　　　　;date.timezone =</p><p>　　　　　　　 改为</p><p>　　　　　　　　date.timezone = Asia/Shanghai</p><p>　　　　　　　</p><p>　　　　配置完成，检测一下配置是否成功。重启Apache，在站点目录下新建文件index.php，输入内容：</p><p>&nbsp;</p><pre>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;();\r\n?&gt;</pre><p>&nbsp;</p><p>　　打开浏览器输入http://localhost，显示如下内容，则安装成功，并且成功关联MySQL。</p><p><br/></p>', '0', '1', '1598107123', '1598107123', null);
INSERT INTO `tp_article` VALUES ('8', 'MySQL数据库操作语法详解', 'zjh', 'mysql概要', 'mysql', '3', '0', '<p><span class=\"bjh-p\">1 数据库创建<span class=\"bjh-br\"></span></span></p><p><span class=\"bjh-p\">建库语句如下：</span></p><p><img class=\"normal\" src=\"http://pics4.baidu.com/feed/b21bb051f8198618170fee288b68d8768ad4e659.jpeg?token=ad2f331dd34f993c26700dce205391ad&s=3AAA7A23CD784C0318DDA0D3030080B0\" width=\"494px\"/></p><p><span class=\"bjh-p\">CREATE DATABASE|SCHEMA会创建一个给定名称的数据库，只有拥有CREATE权限才能使用该语法。不加IF NOT EXISTS时，如果需要创建数据库已经同名存在则会报错。</span></p><p><span class=\"bjh-p\">create_specification中指定了创建数据库特性。数据库特性存放在数据库目录下的db.opt文件中，一般在数据库安装目录的data/db_name/子目录下。CHARACTER\r\n SET子句指定了数据库默认的字符集，COLLATE子句指定了数据库默认校对。</span></p><p><span class=\"bjh-p\">MySQL的数据库以数据库名为目录下包含与表对应的文件的方式实现的，例如我的数据库安装目录是/usr/local/mysql，并且创建了一个test数据库，里面有个test表。那么在/usr/local/mysql/data目录下的test子目录就是test数据库对应的目录，该子目录下的db.opt就指定了test数据库的特性。其中test.frm就是test表的数据文件。在数据的初创时是没有表存在的，它只会在data目录下生成数据库目录并在其中生成db.opt文件。</span></p><p><span class=\"bjh-p\">如果在data目录下使用mkdir命令直接创建一个目录，服务器也会把它当作一个数据库，并且在SHOW DATABASES中也可以输出。</span></p><p><span class=\"bjh-p\">MySQL对于数据库的个数并没做限制，但是需要考虑部署服务的文件系统可能对子目录的个数有限制。</span></p><p><span class=\"bjh-p\">2 数据库删除</span></p><p><img class=\"normal\" src=\"http://pics1.baidu.com/feed/bd315c6034a85edf92a20baa81d1ff26dc54759c.jpeg?token=f3334731b77aa3dcee5ed22bf80ab3fe\" width=\"341px\"/></p><p><span class=\"bjh-p\">DROP DATABASE会删除所有的数据表并删除数据库，使用该命令应该拥有DROP权限。DROP SCHEMA是同等命令。注意：当一个数据库被删除时，该数据库对应的用户权限不会自动删除，需要手工删除。</span></p><p><span class=\"bjh-p\">IF EXISTS就是为了防止所要删除的数据库不存在而报错。</span></p><p><span class=\"bjh-p\">如果当前默认的数据库被删除了，那么默认数据库不会被设置，也就是在执行DATABASE()函数会返回NULL。如下图所示：</span></p><p><img class=\"large\" src=\"http://pics3.baidu.com/feed/91529822720e0cf3e7651a2eb3c3041abc09aae4.jpeg?token=965ab15e42e0ebcbb1b66482c1a0cb26&s=F2B7616C5BA4B36E00F6C4070200E0CB\"/></p><p><span class=\"bjh-p\">如果数据库上存在链接使用该命令，那么链接库和原始库都会被删除。</span></p><p><span class=\"bjh-p\">DROP\r\n \r\nDATABASE命令会返回删除的表的个数，即.frm文件的个数。该命令会删除数据库目录以及目录下的所有文件，包括：.BAK、.DAT、.HSH、.MRG、.MYD、.MYI、.TRG、\r\n .TRN、.cfg、.db、.frm、.ibd、.ndb、 .par以及.opt等。</span></p><p><span class=\"bjh-p\">如果目录下还存在其他不能删除的文件，那么该数据库目录是不会被删除的，这是需要手动去删除数据库目录下的文件，然后在重新执行DROP DATABASE命令。</span></p><p><span class=\"bjh-p\">删除数据库时，不会删除数据库中的临时表，临时表在创建它的会话结束后会自动删除。</span></p><p><span class=\"bjh-p\">3 数据库修改<span class=\"bjh-br\"></span></span></p><p><img class=\"normal\" src=\"http://pics3.baidu.com/feed/a71ea8d3fd1f4134189d44f99e9a63cfd0c85e1e.jpeg?token=9a54174027a3f9db9e41ebd0255c4bdc&s=1AAA722387587DC006DDC5DE0300C0B0\" width=\"463px\"/></p><p><span class=\"bjh-p\">ALTER DATABASE或ALTER SCHEMA可以用来改变数据库的所有属性，也就是数据库目录下的db.opt文件，该命令需要ALTER权限才能执行。如果命令中省略了db_name，则对默认数据库进行操作。</span></p><p><span class=\"bjh-p\">1&gt; 国家语言选择</span></p><p><span class=\"bjh-p\">CHARACTER SET子句会修改数据库默认的字符集，COLLATE子句会修改数据库校验。第10章字符集、校验、解码中讨论了这些东西。</span></p><p><span class=\"bjh-p\">可以通过使用SHOW CHARACTER SET和SHOW COLLATION语句查看哪些字符集和校验码可以使用。如果修改了数据库默认编码与校验，之前存储过程和函数必须被删除并重新创建。</span></p><p><span class=\"bjh-p\">2&gt; 5.1后的升级</span></p><p><span class=\"bjh-p\">UPGRADE DATA DIRECTORY子句用与对5.1版本之前的数据库数据文件目录进行重命名。该子句使用有以下条件：</span></p><p><span class=\"bjh-p\">1) 从5.1之前的版本升级到5.1；</span></p><p><span class=\"bjh-p\">2) 如果数据目录名中存在特殊的字符，该命令可以将命名升级数据库当前的编码。</span></p><p><span class=\"bjh-p\">3) 通过mysqlcheck命令使用；</span></p><p><span class=\"bjh-p\">例如，如果MySQL5.0中有数据库名为a-b-c，数据目录名也被定义为a-b-c，对于某些文件系统来说这是不安全的。在MySQL5.1及之后，这样的数据目录名会被编码为a@002db@002dc。</span></p><p><span class=\"bjh-p\">当系统升级为5.1或之后版本后，a-b-c的名称会显示为#mysql50#a-b-c，此时需要使用#mysql50前缀来使用该名称。UPGRADE DDAT DIRECTORY NAME就能是服务器重新对该目录名称进行编码，如下代码：</span></p><p><img class=\"normal\" src=\"http://pics0.baidu.com/feed/9a504fc2d5628535ebc122302e6a80c3a7ef630d.jpeg?token=87d9c203b81b461855f9edf13cd28cad\" width=\"480px\"/></p><p><span class=\"bjh-p\">然后就可以使用数据库名a-b-c，不用添加#mysql50#前缀了。</span></p><p><span class=\"bjh-p\">注意：5.7.6版本已经启用了该子句并且在之后版本会删除该子句。如果需要使用该方式，可以现将数据库升级到5.1，然后再升级到5.7.6之后。</span></p><p><br/></p>', '0', '2', '1598107331', '1598107331', null);
INSERT INTO `tp_article` VALUES ('9', 'Mysql安装', 'zjh', 'mysql安装概要', 'mysql', '2', '0', '<h2>Linux/UNIX 上安装 MySQL</h2><p>Linux平台上推荐使用RPM包来安装Mysql,MySQL AB提供了以下RPM包的下载地址：</p><ul class=\" list-paddingleft-2\"><li><p><strong>MySQL</strong> - MySQL服务器。你需要该选项，除非你只想连接运行在另一台机器上的MySQL服务器。</p></li><li><p><strong>MySQL-client</strong> - MySQL 客户端程序，用于连接并操作Mysql服务器。</p></li><li><p><strong>MySQL-devel</strong> - 库和包含文件，如果你想要编译其它MySQL客户端，例如Perl模块，则需要安装该RPM包。</p></li><li><p><strong>MySQL-shared</strong> - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so*)，使用MySQL。</p></li><li><p><strong>MySQL-bench</strong> - MySQL数据库服务器的基准和性能测试工具。</p></li></ul><p>安装前，我们可以检测系统是否自带安装 MySQL:</p><pre class=\"prettyprint prettyprinted\" style=\"\">rpm&nbsp;-qa&nbsp;|&nbsp;grep&nbsp;mysql</pre><p>如果你系统有安装，那可以选择进行卸载:</p><pre class=\"prettyprint prettyprinted\" style=\"\">rpm&nbsp;-e&nbsp;mysql　　//&nbsp;普通删除模式rpm&nbsp;-e&nbsp;--nodeps&nbsp;mysql　　//&nbsp;强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</pre><p><strong>安装 MySQL：</strong></p><p>接下来我们在 Centos7 系统下使用 yum 命令安装 MySQL，需要注意的是 CentOS 7 版本中 MySQL数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 Yum 资源包，下载地址为：<a href=\"https://dev.mysql.com/downloads/repo/yum/\" target=\"_blank\">https://dev.mysql.com/downloads/repo/yum/</a></p><p><img src=\"https://www.runoob.com/wp-content/uploads/2014/03/repo-name-small.png\"/></p><pre class=\"prettyprint prettyprinted\" style=\"\">wget&nbsp;http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmrpm&nbsp;-ivh&nbsp;mysql-community-release-el7-5.noarch.rpm\r\nyum&nbsp;update\r\nyum&nbsp;install&nbsp;mysql-server</pre><p>权限设置：</p><pre class=\"prettyprint prettyprinted\" style=\"\">chown&nbsp;mysql:mysql&nbsp;-R&nbsp;/var/lib/mysql</pre><p>初始化 MySQL：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysqld&nbsp;--initialize</pre><p>启动 MySQL：</p><pre class=\"prettyprint prettyprinted\" style=\"\">systemctl&nbsp;start&nbsp;mysqld</pre><p>查看 MySQL 运行状态：</p><pre class=\"prettyprint prettyprinted\" style=\"\">systemctl&nbsp;status&nbsp;mysqld</pre><p><strong>注意：</strong>如果我们是第一次启动 mysql 服务，mysql 服务器首先会进行初始化的配置。</p><blockquote><p>此外,你也可以使用 MariaDB 代替，MariaDB 数据库管理系统是 MySQL \r\n的一个分支，主要由开源社区在维护，采用 GPL 授权许可。开发这个分支的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL \r\n闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</p><p>MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。</p><pre class=\"prettyprint prettyprinted\" style=\"\">yum&nbsp;install&nbsp;mariadb-server&nbsp;mariadb</pre><p>mariadb数据库的相关命令是：</p><pre class=\"prettyprint prettyprinted\" style=\"\">systemctl&nbsp;start&nbsp;mariadb&nbsp;&nbsp;#启动MariaDBsystemctl&nbsp;stop&nbsp;mariadb&nbsp;&nbsp;#停止MariaDBsystemctl&nbsp;restart&nbsp;mariadb&nbsp;&nbsp;#重启MariaDBsystemctl&nbsp;enable&nbsp;mariadb&nbsp;&nbsp;#设置开机启动</pre></blockquote><hr/><h2>验证 MySQL 安装</h2><p>在成功安装 MySQL 后，一些基础表会表初始化，在服务器启动后，你可以通过简单的测试来验证 MySQL 是否工作正常。</p><p>使用 mysqladmin 工具来获取服务器状态：</p><p>使用 mysqladmin 命令来检查服务器的版本, 在 linux 上该二进制文件位于 /usr/bin 目录，在 Windows 上该二进制文件位于C:\\mysql\\bin 。</p><pre class=\"prettyprint prettyprinted\" style=\"\">[root@host]#&nbsp;mysqladmin&nbsp;--version</pre><p>linux上该命令将输出以下结果，该结果基于你的系统信息：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysqladmin&nbsp;&nbsp;Ver&nbsp;8.23&nbsp;Distrib&nbsp;5.0.9-0,&nbsp;for&nbsp;redhat-linux-gnu&nbsp;on&nbsp;i386</pre><p>如果以上命令执行后未输出任何信息，说明你的Mysql未安装成功。</p><hr/><h2>使用 MySQL Client(Mysql客户端) 执行简单的SQL命令</h2><p>你可以在 MySQL Client(Mysql客户端) 使用 mysql 命令连接到 MySQL 服务器上，默认情况下 MySQL 服务器的登录密码为空，所以本实例不需要输入密码。</p><p>命令如下：</p><pre class=\"prettyprint prettyprinted\" style=\"\">[root@host]#&nbsp;mysql</pre><p>以上命令执行后会输出 mysql&gt;提示符，这说明你已经成功连接到Mysql服务器上，你可以在 mysql&gt; 提示符执行SQL命令：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysql&gt;&nbsp;SHOW&nbsp;DATABASES;+----------+|&nbsp;Database&nbsp;|+----------+|&nbsp;mysql&nbsp;&nbsp;&nbsp;&nbsp;||&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|+----------+2&nbsp;rows&nbsp;in&nbsp;set&nbsp;(0.13&nbsp;sec)</pre><hr/><h2>Mysql安装后需要做的</h2><p>Mysql安装成功后，默认的root用户密码为空，你可以使用以下命令来创建root用户的密码：</p><pre class=\"prettyprint prettyprinted\" style=\"\">[root@host]#&nbsp;mysqladmin&nbsp;-u&nbsp;root&nbsp;password&nbsp;&quot;new_password&quot;;</pre><p>现在你可以通过以下命令来连接到Mysql服务器：</p><pre class=\"prettyprint prettyprinted\" style=\"\">[root@host]#&nbsp;mysql&nbsp;-u&nbsp;root&nbsp;-pEnter&nbsp;password:*******</pre><p><strong>注意：</strong>在输入密码时，密码是不会显示了，你正确输入即可。</p><hr/><h2>Windows 上安装 MySQL</h2><p><br/></p><p>Windows 上安装 MySQL 相对来说会较为简单，最新版本可以在 <a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\">MySQL 下载</a> 中下载中查看(<strong>更详细安装：<a href=\"https://www.runoob.com/w3cnote/windows10-mysql-installer.html\" target=\"_blank\">Windows 上安装 MySQL</a></strong>)。</p><p><img src=\"https://www.runoob.com/wp-content/uploads/2014/03/330405-20160709174318905-664331194.png\"/></p><p><img src=\"https://www.runoob.com/wp-content/uploads/2014/03/20DBD7BA-A653-4AE3-887E-2A16E6EBB2E3.png\"/></p><p>点击 <strong>Download</strong> 按钮进入下载页面，点击下图中的 <strong>No thanks, just start my download.</strong> 就可立即下载：</p><p><img src=\"https://www.runoob.com/wp-content/uploads/2014/03/330405-20160709174941374-1821908969.png\"/></p><p>下载完后，我们将 zip 包解压到相应的目录，这里我将解压后的文件夹放在 <strong>C:\\web\\mysql-8.0.11</strong> 下。</p><p><strong>接下来我们需要配置下 MySQL 的配置文件</strong></p><p>打开刚刚解压的文件夹 <strong>C:\\web\\mysql-8.0.11</strong> ，在该文件夹下创建 <strong>my.ini</strong> 配置文件，编辑 <strong>my.ini</strong> 配置以下基本信息：</p><pre class=\"prettyprint prettyprinted\" style=\"\">[client]#&nbsp;设置mysql客户端默认字符集default-character-set=utf8&nbsp;\r\n[mysqld]#&nbsp;设置3306端口port&nbsp;=&nbsp;3306#&nbsp;设置mysql的安装目录basedir=C:\\\\web\\\\mysql-8.0.11#&nbsp;设置&nbsp;mysql数据库的数据的存放目录，MySQL&nbsp;8+&nbsp;不需要以下配置，系统自己生成即可，否则有可能报错#&nbsp;datadir=C:\\\\web\\\\sqldata#&nbsp;允许最大连接数max_connections=20#&nbsp;服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8#&nbsp;创建新表时将使用的默认存储引擎default-storage-engine=INNODB</pre><p><strong>接下来我们来启动下 MySQL &nbsp;数据库：</strong></p><p>以管理员身份打开 cmd 命令行工具，切换目录：</p><pre class=\"prettyprint prettyprinted\" style=\"\">cd&nbsp;C:\\web\\mysql-8.0.11\\bin</pre><p>初始化数据库：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysqld&nbsp;--initialize&nbsp;--console</pre><p>执行完成后，会输出 root 用户的初始默认密码，如：</p><pre class=\"prettyprint prettyprinted\" style=\"\">...2018-04-20T02:35:05.464644Z&nbsp;5&nbsp;[Note]&nbsp;[MY-010454]&nbsp;[Server]&nbsp;A&nbsp;temporary&nbsp;password&nbsp;is&nbsp;generated&nbsp;for&nbsp;root@localhost:&nbsp;APWCY5ws&amp;hjQ...</pre><p><span class=\"marked\">APWCY5ws&amp;hjQ</span> 就是初始密码，后续登录需要用到，你也可以在登陆后修改密码。</p><p>输入以下安装命令：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysqld&nbsp;install</pre><p>启动输入以下命令即可：</p><pre class=\"prettyprint prettyprinted\" style=\"\">net&nbsp;start&nbsp;mysql</pre><blockquote><p>注意: 在 5.7 需要初始化 data 目录：</p><pre class=\"prettyprint prettyprinted\" style=\"\">cd&nbsp;C:\\web\\mysql-8.0.11\\bin&nbsp;mysqld&nbsp;--initialize-insecure</pre><p>初始化后再运行 net start mysql 即可启动 mysql。</p></blockquote><hr/><h2>登录 MySQL</h2><p>当 MySQL 服务已经运行时, 我们可以通过 MySQL 自带的客户端工具登录到 MySQL 数据库中, 首先打开命令提示符, 输入以下格式的命名:</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysql&nbsp;-h&nbsp;主机名&nbsp;-u&nbsp;用户名&nbsp;-p</pre><p>参数说明：</p><ul class=\" list-paddingleft-2\"><li><p><strong>-h</strong> : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;</p></li><li><p><strong>-u</strong> : 登录的用户名;</p></li><li><p><strong>-p</strong> : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。</p></li></ul><p>如果我们要登录本机的 MySQL 数据库，只需要输入以下命令即可：</p><pre class=\"prettyprint prettyprinted\" style=\"\">mysql&nbsp;-u&nbsp;root&nbsp;-p</pre><p>按回车确认, 如果安装正确且 MySQL 正在运行, 会得到以下响应:</p><pre class=\"prettyprint prettyprinted\" style=\"\">Enter&nbsp;password:</pre><p>若密码存在, 输入密码登录, 不存在则直接按回车登录。登录成功后你将会看到 Welcome to the MySQL monitor... 的提示语。</p><p>然后命令提示符会一直以 <span class=\"marked\">mysq&gt;</span> 加一个闪烁的光标等待命令的输入, 输入 <strong>exit</strong> 或 <strong>quit</strong> 退出登录。</p><p><br/></p>', '0', '2', '1598107482', '1598107482', null);
INSERT INTO `tp_article` VALUES ('10', '数据库优化', 'zjh', '数据库优化', 'mysql', '1', '0', '<p>选择InnoDB作为存储引擎</p><p>大型产品的数据库对于可靠性和并发性的要求较高，InnoDB作为默认的MySQL存储引擎，相对于MyISAM来说是个更佳的选择。</p><p>优化数据库结构</p><p>组织数据库的schema、表和字段以降低I/O的开销，将相关项保存在一起，并提前规划，以便随着数据量的增长，性能可以保持较高的水平。</p><p>设计数据表应尽量使其占用的空间最小化，表的主键应尽可能短。·对于InnoDB表，主键所在的列在每个辅助索引条目中都是可复制的，因此如果有很多辅助索引，那么一个短的主键可以节省大量空间。</p><p>仅创建你需要改进查询性能的索引。索引有助于检索，但是会增加插入和更新操作的执行时间。</p><p>InnoDB的ChangeBuffering特性</p><p>InnoDB提供了changebuffering的配置，可减少维护辅助索引所需的磁盘I/O。大规模的数据库可能会遇到大量的表操作和大量的I/O，以保证辅助索引保持最新。当相关页面不在缓冲池里面时，InnoDB的changebuffer将会更改缓存到辅助索引条目，从而避免因不能立即从磁盘读取页面而导致耗时的I/O操作。当页面被加载到缓冲池时，缓冲的更改将被合并，更新的页面之后会刷新到磁盘。这样做可提高性能，适用于MySQL5.5及更高版本。</p><p>InnoDB页面压缩</p><p>InnoDB支持对表进行页面级的压缩。当写入数据页的时候，会有特定的压缩算法对其进行压缩。压缩后的数据会写入磁盘，其打孔机制会释放页面末尾的空块。如果压缩失败，数据会按原样写入。表和索引都会被压缩，因为索引通常是数据库总大小中占比很大的一部分，压缩可以显著节约内存，I/O或处理时间，这样就达到了提高性能和伸缩性的目的。它还可以减少内存和磁盘之间传输的数据量。MySQL5.1及更高版本支持该功能。</p><p>注意，页面压缩并不能支持共享表空间中的表。共享表空间包括系统表空间、临时表空间和常规表空间。</p><p>使用批量数据导入</p><p>在主键上使用已排序的数据源进行批量数据的导入可加快数据插入的过程。否则，可能需要在其他行之间插入行以维护排序，这会导致磁盘I/O变高，进而影响性能，增加页的拆分。关闭自动提交的模式也是有好处的，因为它会为每个插入执行日志刷新到磁盘。在批量插入期间临时转移唯一键和外键检查也可显著降低磁盘I/O。对于新建的表，最好的做法是在批量导入后创建外键/唯一键约束。</p><p>一旦你的数据达到稳定的大小，或者增长的表增加了几十或几百兆字节，就应该考虑使用OPTIMIZETABLE语句重新组织表并压缩浪费的空间。对重新组织后的表进行全表扫描所需要的I/O会更少。</p><p>优化InnoDB磁盘I/O</p><p>增加InnoDB缓冲池大小可以让查询从缓冲池访问而不是通过磁盘I/O访问。通过调整系统变量innodb_flush_method来调整清除缓冲的指标使其达到最佳水平。</p><p>MySQL的内存分配</p><p>在为MySQL分配足够的内存之前，请考虑不同领域对MySQL的内存需求。要考虑的关键领域是：并发连接——对于大量并发连接，排序和临时表将需要大量内存。在撰写本文时，对于处理3000+并发连接的数据库，16GB到32GB的RAM是足够的。</p><p>内存碎片可以消耗大约10%或更多的内存。像innodb_buffer_pool_size、key_buffer_size、query_cache_size等缓存和缓冲区要消耗大约80%的已分配内存。</p><p>日常维护</p><p>定期检查慢的查询日志并优化查询机制以有效使用缓存来减少磁盘I/O。优化它们，以扫描最少的行数，而不是进行全表扫描。</p><p>其他可以帮助DBA检查和分析性能的日志包括：错误日志、常规查询日志、二进制日志、DDL日志(元数据日志)。</p><p>定期刷新缓存和缓冲区以降低碎片化。使用OPTIMIZETABLE语句重新组织表并压缩任何可能被浪费的空间。</p><p><br/></p>', '0', '2', '1598107551', '1598107551', null);
INSERT INTO `tp_article` VALUES ('11', 'Apache介绍', 'zjh', '有关apache详细介绍', 'apache', '2', '0', '<p><strong>Apache HTTP </strong><strong><a target=\"_blank\" href=\"https://baike.baidu.com/item/Server\">Server</a></strong>（简称<strong>Apache</strong>）是<a target=\"_blank\" href=\"https://baike.baidu.com/item/Apache%E8%BD%AF%E4%BB%B6%E5%9F%BA%E9%87%91%E4%BC%9A\">Apache软件基金会</a>的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩展，将Perl/Python等解释器编译到服务器中。<sup class=\"sup--normal\">[2]</sup><a class=\"sup-anchor\">&nbsp;</a></p><p>Apache HTTP服务器是一个模块化的服务器，源于NCSAhttpd服务器，经过多次修改，成为世界使用排名第一的<a target=\"_blank\" href=\"https://baike.baidu.com/item/Web%E6%9C%8D%E5%8A%A1%E5%99%A8\">Web服务器</a>软件。</p><p>它可以运行在几乎所有广泛使用的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B9%B3%E5%8F%B0\">计算机平台</a>上。</p><p>Apache源于NCSAhttpd服务器，经过多次修改，成为世界上最流行的<a target=\"_blank\" href=\"https://baike.baidu.com/item/Web%E6%9C%8D%E5%8A%A1%E5%99%A8\">Web服务器</a>软件之一。Apache取自“a patchy server”的读音，意思是充满补丁的服务器，因为它是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6\">自由软件</a>，所以不断有人来为它开发新的功能、新的特性、修改原来的缺陷。Apache的特点是简单、速度快、性能稳定，并可做<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8\">代理服务器</a>来使用。</p><p>本来它只用于小型或试验Internet网络，后来逐步扩充到各种<a target=\"_blank\" href=\"https://baike.baidu.com/item/Unix\">Unix</a>系统中，尤其对<a target=\"_blank\" href=\"https://baike.baidu.com/item/Linux\">Linux</a>的支持相当完美。Apache有多种产品，可以支持<a target=\"_blank\" href=\"https://baike.baidu.com/item/SSL\">SSL</a>技术，支持多个<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">虚拟主机</a>。Apache是以<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B\">进程</a>为基础的结构，进程要比<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BA%BF%E7%A8%8B\">线程</a>消耗更多的系统开支，不太适合于多处理器环境，因此，在一个Apache Web站点扩容时，通常是增加<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>或扩充群集节点而不是增加<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%84%E7%90%86%E5%99%A8\">处理器</a>。到目前为止Apache仍然是世界上用的最多的Web服务器，市场占有率达60%左右。世界上很多著名的网站如<a target=\"_blank\" href=\"https://baike.baidu.com/item/Amazon\">Amazon</a>、Yahoo!、W3 Consortium、Financial Times等都是Apache的产物，它的成功之处主要在于它的源代码开放、有一支开放的开发队伍、支持<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%B7%A8%E5%B9%B3%E5%8F%B0\">跨平台</a>的应用（可以运行在几乎所有的Unix、Windows、Linux系统平台上）以及它的可移植性等方面。</p><p>Apache的诞生极富有戏剧性。当NCSAWWW服务器项目停顿后，那些使用NCSAWWW服务器的人们开始交换他们用于该服务器的补丁程序，他们也很快认识到成立管理这些补丁程序的论坛是必要的。就这样，诞生了Apache Group，后来这个团体在<a target=\"_blank\" href=\"https://baike.baidu.com/item/NCSA\">NCSA</a>的基础上创建了Apache。</p><p><a class=\"image-link\" href=\"https://baike.baidu.com/pic/apache/6265/0/79b1e936746c71080b55a94e?fr=lemma&ct=single\" target=\"_blank\" title=\"Apache Server配置界面\" style=\"width:220px;height:168.82703777336px;\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/962bd40735fae6cda02696680fb30f2442a70f2c?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"Apache Server配置界面\"/></a><span class=\"description\">Apache Server配置界面</span></p><p>Apache<a target=\"_blank\" href=\"https://baike.baidu.com/item/web%E6%9C%8D%E5%8A%A1%E5%99%A8\">web服务器</a>软件拥有以下特性：</p><p>1.支持最新的<a target=\"_blank\" href=\"https://baike.baidu.com/item/HTTP\">HTTP</a>/1.1通信协议</p><p>2.拥有简单而强有力的基于文件的配置过程</p><p>3.支持通用网关接口</p><p>4.支持基于IP和基于域名的虚拟主机</p><p>5.支持多种方式的<a target=\"_blank\" href=\"https://baike.baidu.com/item/HTTP\">HTTP</a>认证</p><p>6.集成<a target=\"_blank\" href=\"https://baike.baidu.com/item/Perl\">Perl</a>处理模块</p><p>7.集成<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8\">代理服务器</a>模块</p><p>8.支持实时监视服务器状态和定制服务器日志</p><p>9.支持服务器端包含指令(SSI)</p><p>10.支持安全<a target=\"_blank\" href=\"https://baike.baidu.com/item/Socket\">Socket</a>层(SSL)</p><p>11.提供用户会话过程的跟踪</p><p>12.支持FastCGI</p><p>13.通过<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AC%AC%E4%B8%89%E6%96%B9\">第三方</a>模块可以支持<a target=\"_blank\" href=\"https://baike.baidu.com/item/Java/85979\">Java</a>Servlets</p><p>如果你准备选择Web服务器，毫无疑问Apache是你的最佳选择。</p><p><br/></p>', '0', '8', '1598107741', '1598107741', null);
INSERT INTO `tp_article` VALUES ('12', 'Apache性能优化', 'zjh', '性能优化', 'apache', '3', '0', '<h3 class=\"title-text\">性能优化</h3><p>我们在使用Apache作为<a target=\"_blank\" href=\"https://baike.baidu.com/item/web\">web</a>服务器的过程中，只有对Apache服务器进行适当的优化配置，才能让Apache发挥出更好的性能；再反过来说，如果Apache的配置非常糟糕，Apache可能无法正常为我们服务。因此，针对我们的应用需求对Apache服务器的配置进行一定的优化是必不可少的。</p><p><strong>硬件和操作系统</strong></p><p>毫无疑问，要想让Apache服务器发挥出更好的性能，首先必须得保证硬件和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a>能够满足Apache服务器的负载需要。如果由于硬件和操作系统原因导致Apache的运行性能受到较大的影响，即使对Apache服务器本身优化配置得再好也无济于事，「想要马儿跑得好，又想马儿不吃草」当然是行不通的。</p><p>一般而言，影响web服务器性能的最大的因素是内存。当内存不足时，操作系统将会使用内存交换机制。内存交换机制，简而言之，就是将本地<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A3%81%E7%9B%98\">磁盘</a>的一部分作为虚拟内存空间供程序使用。web服务器想要更好地所有用户服务，则其应该永远不要使用内存交换机制，否则其性能将会受到较大的影响。不仅如此，由于服务器使用了内存交换机制所产生的「滞后」，「滞后」的直接后果就是让用户感觉网站的访问速度很慢，此时用户极有可能会点击【停止】或者【刷新】，如果用户不停地点击【刷新】，将会给服务器带来更大的负载，从而进入一个恶性循环。</p><p>对于Apache服务器的内存需求量，我们可以通过操作系统相关命令查看服务器正常运行时每个为用户服务的进程(或线程)平均占用多少的内存，再根据需求或者相关数据得出单个服务器所要支撑的最大并发负载数，从而计算出Apache服务器的内存需求量。为Apache服务器分配的内存最好能够大于计算得来的需求量。</p><p>除此之外，硬件最好能够保证有足够快的CPU、足够快的网卡(足够的带宽)、足够快足够大的硬盘。这里的「足够」是指能够满足<a target=\"_blank\" href=\"https://baike.baidu.com/item/web\">web</a>应用的实际需求。</p><p>至于<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a>，最好能够选择一个有利于服务器运行的最新最稳定的版本并安装好了对应的补丁程序。毕竟，随着时代的发展，操作系统也在不断进步。许多操作系统厂商都提供了可以显著改善性能的TCP协议栈和线程库。例如，如果你的操作系统支持sendfile()<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F\">系统</a>调用，Apache 2.x服务器可以使用sendfile()从而更快地发送静态内容并且占用较少的CPU时间。</p><p><strong>优化Apache配置</strong></p><p><strong>1.尽量使用IP地址代替域名</strong></p><p>在Apache的配置文件中，有许多可以针对具体请求来源进行相应操作的配置，例如\r\n allow from \r\n365mini.com表示允许域名为365mini.com的用户访问。在这种情况下，如果我们知道该域名或主机名与某个IP地址一一对应，则最好使用具体的IP地址来代替域名。否则Apache<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>将要进行多次DNS查询来确定该域名或主机名所对应的IP地址。</p><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p><em>注意</em>：可能存在一些例外情况，例如一个IP地址对应多个<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D\">域名</a>，或者一个域名对应多个IP地址或者对应一个变化的IP地址，此时仍然要使用域名或<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA\">主机</a>名。一般而言，只有域名或主机名与IP地址具有一一对应关系时，才使用IP地址来代替域名。请根据实际情况作出选择。</p></td></tr></tbody></table><p><strong>2.启用FollowSymLinks选项</strong></p><p>当Apache处理请求时，如果对应的请求文件所在目录没有启用FollowSymLinks选项，或使用了SymLinksIfOwnerMatch选项，Apache就必须执行额外的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F\">系统</a>调用来验证符号连接的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E6%80%A7\">安全性</a>。文件名的每一个组成部分都需要一次额外的调用。因此，如果在安全性允许的情况下，为了得到更加良好的运行性能，应当放弃对符号连接的保护，在所有地方都设置FollowSymLinks，并放弃使用SymLinksIfOwnerMatch。</p><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>#启用FollowSymLinks选项，如果子目录没有额外的设置，将会继承该设置</p><p>Options FollowSymLinks</p></td></tr></tbody></table><p><strong>3.禁用AllowOverride</strong></p><p>如果Apache的配置文件中允许了AllowOverride指令，则Apache在处理每个请求路径时，都会尝试对文件路径的每一个组成部分都打开该目录下的.htaccess文件。</p><p>例如，当用户请求访问服务器上的/static/test/hello.html，则Apache将会尝试打开/static/test/.htaccess、/static/.htaccess、/.htaccess三个文件。从而影响<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>的运行性能。</p><p>因此，如果当前用户拥有Apache配置文件的编辑权限，建议将.htaccess文件中的配置内容直接写在Apache对应的配置文件(一般为httpd.conf)中，并禁用AllowOverride。</p><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>#禁用AllowOverride</p><p>AllowOverride None</p></td></tr></tbody></table><p>当然，如果用户不具备Apache配置文件的编辑权限，又希望能够对站点进行相应的管理设置，就需要管理员允许AllowOverride，以便于用户编写自己的.htaccess文件。</p><p><strong>4.尽量不使用通配符</strong></p><p>在Apache的配置文件中，我们可以指定每个目录下的默认欢迎页面，例如：</p><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>#以内容协商的方式指定欢迎页面</p><p>DirectoryIndex index</p></td></tr></tbody></table><p>使用上述配置后，当访问当前目录时，Apache将会在当前目录下查找名称形如index.*的文件，并根据<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF\">客户端</a>期望响应的类型自动返回一个最匹配的请求文件(即内容协商)。</p><p>不过，这样做将会导致一点性能损失，尽管内容协商的好处大于性能的损失，如果你仍然在意这一点性能损失的话，建议你不要使用上述通配符形式的配置，而是根据自己的需要，指定一个完整的index.*文件列表。</p><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>#指定欢迎页面</p><p>DirectoryIndex index.html index.cgi index.pl</p></td></tr></tbody></table><p>使用上述配置后，Apache将按照从左到右的先后顺序依次查找上述三个名称的文件，并响应最先找到的那个文件。</p><p><strong>5.选择适当的多路处理模块(MPM)</strong></p><p>由于多路处理<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A8%A1%E5%9D%97\">模块</a>的相关内容较多，请参考下面的<strong>修改最大并发连接数</strong>。</p><p><strong>6.修改Apache的并发连接配置</strong></p><p>关于修改Apache的并发连接配置的具体内容，请同样参考请参考下面的<strong>修改最大并发连接数</strong>。</p><p><a class=\"lemma-anchor para-title\"></a><a class=\"lemma-anchor \"></a><a class=\"lemma-anchor \"></a><a class=\"lemma-anchor \"></a></p><h3 class=\"title-text\">并发连接数</h3><p>Apache是一个跨平台的web服务器，由于其简单高效、稳定安全的特性，被广泛应用于计算机技术的各个领域。现在，Apache凭借其庞大的用户数，已成为用户数排名第一的web服务器。</p><p>尽管如此，在实际的生产环境中，我们仍然不可能直接使用默认配置的Apache来充当服务器。毕竟，为了更充分合理地利用Apache服务器，我们都应该根据自己的实际需要对Apache的默认配置作出一些必要的调整。而针对Apache的优化配置过程中，修改Apache的最大并发连接数<sup class=\"sup--normal\">[3]</sup><a class=\"sup-anchor\">&nbsp;</a>就显得尤为重要。</p><p>在修改Apache的最大并发连接数<sup class=\"sup--normal\">[3]</sup><a class=\"sup-anchor\">&nbsp;</a>之前，我们需要预先了解一些Apache的相关知识。</p><p>众所周知，Apache是一个跨平台的、采用模块化设计的服务器。为了应对不同的平台和不同的环境产生的各种不同的需求，也为了在具体的平台或环境下达到最佳的效果，Apache在web服务器的基础功能方面(端口绑定、接收请求等)也同样采用了模块化设计，这个Apache的核心模块就叫做多路处理模块(Multi-ProcessingModule，简称MPM)。</p><p>Apache针对不同的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a>提供了多个不同的MPM模块，例如：mpm_beos、mpm_event、mpm_netware、mpmt_os2、mpm_prefork、mpm_winnt、mpm_worker。如果条件允许，我们可以根据实际需求将指定的MPM模块编译进我们自己的Apache中(Apache的源码是开放的，允许用户自行编译)。不过，如果在编译时我们没有选择，Apache将按照如下表格根据不同的操作系统自行选择对应的MPM模块，这也是Apache针对不同平台推荐使用的MPM模块。</p><table><tbody><tr class=\"firstRow\"><td colspan=\"3\"><p>不同操作系统上默认的MPM模块</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>操作系统</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>MPM模块</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>描述</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>Windows</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>mpm_winnt</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>不用介绍了吧:)</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>Unix/Linux</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>mpm_prefork</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>不用介绍了吧:)</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>BeOS</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>mpm_beos</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>由Be公司开发的一种多媒体操作系统，官方版已停止更新。</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>Netware</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>mpm_netware</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>由NOVELL公司推出的一种网络操作系统</p></td></tr><tr><td width=\"96\" valign=\"top\" align=\"left\"><p>OS/2</p></td><td width=\"132\" valign=\"top\" align=\"left\"><p>mpmt_os2</p></td><td width=\"411\" valign=\"top\" align=\"left\"><p>一种最初由微软和IBM共同开发的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a>，现由IBM单独开发(微软放弃OS/2，转而开发Windows)</p></td></tr></tbody></table><p>mpm_event模块可以看作是mpm_worker模块的一个变种，不过其具有实验性质，一般不推荐使用。</p><p>当然，Apache在其官方网站上也提供了根据不同操作系统已经编译好对应MPM模块的成品Apache。你可以点击此处进入Apache官方<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BD%91%E7%AB%99\">网站</a>下载。</p><p>此外，如果我们想要知道某个Apache内部使用的是何种MPM模块，我们可以以命令行的方式进入Apache安装目录\\bin，然后键入命令httpd-l，即可查看到当前Apache内部使用的何种MPM模块。</p><p>使用httpd-l命令查看编译模块</p><p>由于在平常的开发工作中，BeOS、NetWare、OS/2等<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a>并不常见，这里我们主要针对Windows和Unix/Linux操作系统上的MPM模块进行讲解。在Windows和Unix/Linux操作系统上，MPM模块主要有mpm_winnt、mpm_prefork、mpm_worker三种。</p><p><strong>mpm_prefork模块</strong></p><p>mpm_prefork模块主要应用于Unix/Linux平台的Apache服务器，其主要工作方式是：当Apache服务器启动后，mpm_prefork模块会预先创建多个子进程(默认为5个)，当接收到客户端的请求后，mpm_prefork模块再将请求转交给子进程处理，并且每个子进程同时只能用于处理单个请求。如果当前的请求数将超过预先创建的子进程数时，mpm_prefork模块就会创建新的子进程来处理额外的请求。Apache总是试图保持一些备用的或者是空闲的子进程用于迎接即将到来的请求。这样<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF\">客户端</a>的请求就不需要在接收后等候子进程的产生。</p><p>由于在mpm_prefork模块中，每个请求对应一个子进程，因此其占用的系统资源相对其他两种模块而言较多。不过mpm_prefork模块的优点在于它的每个子进程都会独立处理对应的单个请求，这样，如果其中一个请求出现问题就不会影响到其他请求。同时，mpm_prefork模块可以应用于不具备线程安全的第三方模块(比如PHP的非线程安全版本)，且在不支持线程调试的平台上易于调试。此外，mpm_prefork模块还具有比mpm_prefork模块更高的稳定性。</p><p><strong>mpm_worker模块</strong></p><p>mpm_worker模块也主要应用于Unix/Linux平台的Apache<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>，它可以看作是mpm_prefork模块的改进版。mpm_worker模块的工作方式与mpm_prefork模块类似。不过，由于处理相同请求的情况下，基于进程(例如mpm_prefork)比基于线程的处理方式占用的系统资源要多。因此，与mpm_prefork模块不同的是，mpm_worker模块会让每个子进程创建固定数量的服务线程和一个监听线程，并让每个服务线程来处理<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF\">客户端</a>的请求，监听线程用于监听接入请求并将其传递给服务线程处理和应答。Apache总是试图维持一个备用或是空闲的服务线程池。这样，客户端无须等待新线程或新进程的建立即可得到处理。</p><p>与mpm_prefork模块相比，mpm_worker模块可以进一步减少系统资源的开销。再加上它也使用了多进程，每个进程又有多个线程，因此它与完全基于线程的处理方式相比，又增加了一定的稳定性。</p><p><strong>mpm_winnt模块</strong></p><p>mpm_winnt模块是专门针对Windows操作系统而<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BC%98%E5%8C%96%E8%AE%BE%E8%AE%A1\">优化设计</a>的MPM模块。它只创建一个单独的子进程，并在这个子进程中轮流产生多个线程来处理请求。</p><p><strong>修改MPM模块配置</strong></p><p>在对Apache的MPM模块具备一定了解后，我们就可以针对不同的MPM模块来修改Apache的最大并发连接数<sup class=\"sup--normal\">[3]</sup><a class=\"sup-anchor\">&nbsp;</a>配置了。</p><p>1、启用MPM模块配置文件</p><p>在Apace安装目录/conf/extra目录中有一个名为httpd-mpm.conf的配置文件。该文件主要用于进行MPM模块的相关配置。不过，在默认情况下，Apache的MPM模块配置文件并没有启用。因此，我们需要在httpd.conf文件中启用该配置文件，如下所示：</p><table><tbody><tr class=\"firstRow\"><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div><div class=\"line number3 index2 alt2\">3</div><div class=\"line number4 index3 alt1\">4</div></td><td class=\"code\"><div class=\"line number1 index0 alt2\"><code class=\"xml plain\">#Server-poolmanagement(MPMspecific)</code></div><div class=\"line number2 index1 alt1\">&nbsp;</div><div class=\"line number3 index2 alt2\">&nbsp;</div><div class=\"line number4 index3 alt1\"><code class=\"xml plain\">Includeconf/extra/httpd-mpm.conf(去掉该行前面的注释符号&quot;#&quot;)</code></div></td></tr></tbody></table><p>2、 修改MPM模块配置文件中的相关配置</p><p>在启动MPM模块配置文件后，我们就可以使用文本编辑器打开该配置文件，我们可以看到，在该配置文件中有许多配置节点，只有Apache使用对应MPM模块时，对应配置才会生效</p><p>此时，我们就需要根据当前Apache<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>所使用的MPM模块，来修改对应节点下的参数配置。首先，我们来看看<strong>mpm_winnt</strong>模块下的默认配置：</p><table><tbody><tr class=\"firstRow\"><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div><div class=\"line number3 index2 alt2\">3</div><div class=\"line number4 index3 alt1\">4</div><div class=\"line number5 index4 alt2\">5</div><div class=\"line number6 index5 alt1\">6</div><div class=\"line number7 index6 alt2\">7</div><div class=\"line number8 index7 alt1\">8</div></td><td class=\"code\"><div class=\"line number1 index0 alt2\"><code class=\"xml plain\">#由于mpm_winnt模块只会创建1个子进程，因此这里对单个子进程的参数设置就相当于对整个Apache的参数设置&lt;</code><code class=\"xml keyword\">IfModulempm_winnt_module</code><code class=\"xml plain\">&gt;</code></div><div class=\"line number2 index1 alt1\">&nbsp;</div><div class=\"line number3 index2 alt2\">&nbsp;</div><div class=\"line number4 index3 alt1\"><code class=\"xml plain\">ThreadsPerChild150#推荐设置：小型网站=1000中型网站=1000~2000大型网站=2000~3500</code></div><div class=\"line number5 index4 alt2\"><code class=\"xml plain\">MaxRequestsPerChild0#推荐设置：小=10000中或大=20000~100000</code></div><div class=\"line number6 index5 alt1\">&nbsp;</div><div class=\"line number7 index6 alt2\">&nbsp;</div><div class=\"line number8 index7 alt1\"><code class=\"xml plain\">&lt;/</code><code class=\"xml keyword\">IfModule</code><code class=\"xml plain\">&gt;</code></div></td></tr></tbody></table><p>对应的配置参数作用如下：</p><table><tbody><tr class=\"firstRow\"><th width=\"161\"><p>参数名称</p></th><th width=\"534\"><p>参数作用</p></th></tr><tr><td width=\"161\" valign=\"top\" align=\"left\"><p><strong>ThreadsPerChild</strong></p></td><td width=\"534\" valign=\"top\" align=\"left\"><p><strong>每个子进程的最大并发线程数。</strong></p></td></tr><tr><td width=\"161\" valign=\"top\" align=\"left\"><p><strong>MaxRequestsPerChild</strong></p></td><td width=\"534\" valign=\"top\" align=\"left\"><p><strong>每个子进程允许处理的请求总数。</strong></p><p><strong>(</strong>如果累计处理的请求数超过该值，该子进程将会结束(然后根据需要确定是否创建新的子进程)，该值设为0表示不限制请求总数(子进程永不结束)。该参数建议设为非零的值，可以带来以下两个好处：</p><p>1.可以防止程序中可能存在的内存泄漏无限进行下去，从而耗尽内存。</p><p>2.给进程一个有限寿命，从而有助于当<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>负载减轻的时候减少活动进程的数量。</p><p><strong>)</strong></p></td></tr></tbody></table><p>注意：在以上涉及到统计请求数量的参数中，对于KeepAlive的连接，只有第一个请求会被计数。</p><p>接着，我们再来看看<strong>mpm_perfork</strong>模块和<strong>mpm_worker</strong>模块下的默认配置:</p><table><tbody><tr class=\"firstRow\"><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div><div class=\"line number3 index2 alt2\">3</div><div class=\"line number4 index3 alt1\">4</div><div class=\"line number5 index4 alt2\">5</div><div class=\"line number6 index5 alt1\">6</div><div class=\"line number7 index6 alt2\">7</div><div class=\"line number8 index7 alt1\">8</div><div class=\"line number9 index8 alt2\">9</div><div class=\"line number10 index9 alt1\">10</div><div class=\"line number11 index10 alt2\">11</div><div class=\"line number12 index11 alt1\">12</div><div class=\"line number13 index12 alt2\">13</div><div class=\"line number14 index13 alt1\">14</div><div class=\"line number15 index14 alt2\">15</div><div class=\"line number16 index15 alt1\">16</div><div class=\"line number17 index16 alt2\">17</div><div class=\"line number18 index17 alt1\">18</div><div class=\"line number19 index18 alt2\">19</div><div class=\"line number20 index19 alt1\">20</div><div class=\"line number21 index20 alt2\">21</div><div class=\"line number22 index21 alt1\">22</div></td><td class=\"code\"><div class=\"line number1 index0 alt2\"><code class=\"xml plain\">#mpm_perfork模块</code></div><div class=\"line number2 index1 alt1\">&nbsp;</div><div class=\"line number3 index2 alt2\">&nbsp;</div><div class=\"line number4 index3 alt1\"><code class=\"xml plain\">&lt;</code><code class=\"xml keyword\">IfModulempm_prefork_module</code><code class=\"xml plain\">&gt;</code></div><div class=\"line number5 index4 alt2\">&nbsp;</div><div class=\"line number6 index5 alt1\">&nbsp;</div><div class=\"line number7 index6 alt2\"><code class=\"xml plain\">StartServers5#推荐设置：小=默认中=20~50大=50~100</code></div><div class=\"line number8 index7 alt1\">&nbsp;</div><div class=\"line number9 index8 alt2\">&nbsp;</div><div class=\"line number10 index9 alt1\"><code class=\"xml plain\">MinSpareServers5#推荐设置：与StartServers保持一致</code></div><div class=\"line number11 index10 alt2\">&nbsp;</div><div class=\"line number12 index11 alt1\">&nbsp;</div><div class=\"line number13 index12 alt2\"><code class=\"xml plain\">MaxSpareServers10#推荐设置：小=20中=30~80大=80~120</code></div><div class=\"line number14 index13 alt1\">&nbsp;</div><div class=\"line number15 index14 alt2\">&nbsp;</div><div class=\"line number16 index15 alt1\"><code class=\"xml plain\">MaxClients150#推荐设置：小=500中=500~1500大型=1500~3000</code></div><div class=\"line number17 index16 alt2\">&nbsp;</div><div class=\"line number18 index17 alt1\"><code class=\"xml plain\">MaxRequestsPerChild0#推荐设置：小=10000中或大=10000~500000</code></div><div class=\"line number19 index18 alt2\">&nbsp;</div><div class=\"line number20 index19 alt1\"><code class=\"xml plain\">(此外，还需额外设置ServerLimit参数，该参数最好与MaxClients的值保持一致。)</code></div><div class=\"line number21 index20 alt2\">&nbsp;</div><div class=\"line number22 index21 alt1\"><code class=\"xml plain\">&lt;/</code><code class=\"xml keyword\">IfModule</code><code class=\"xml plain\">&gt;</code></div></td></tr></tbody></table><table><tbody><tr class=\"firstRow\"><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div><div class=\"line number3 index2 alt2\">3</div><div class=\"line number4 index3 alt1\">4</div><div class=\"line number5 index4 alt2\">5</div><div class=\"line number6 index5 alt1\">6</div><div class=\"line number7 index6 alt2\">7</div><div class=\"line number8 index7 alt1\">8</div><div class=\"line number9 index8 alt2\">9</div><div class=\"line number10 index9 alt1\">10</div><div class=\"line number11 index10 alt2\">11</div><div class=\"line number12 index11 alt1\">12</div><div class=\"line number13 index12 alt2\">13</div><div class=\"line number14 index13 alt1\">14</div><div class=\"line number15 index14 alt2\">15</div><div class=\"line number16 index15 alt1\">16</div><div class=\"line number17 index16 alt2\">17</div><div class=\"line number18 index17 alt1\">18</div><div class=\"line number19 index18 alt2\">19</div></td><td class=\"code\"><div class=\"line number1 index0 alt2\"><code class=\"xml plain\">#mpm_worker模块</code></div><div class=\"line number2 index1 alt1\">&nbsp;</div><div class=\"line number3 index2 alt2\"><code class=\"xml plain\">&lt;</code><code class=\"xml keyword\">IfModulempm_worker_module</code><code class=\"xml plain\">&gt;</code></div><div class=\"line number4 index3 alt1\">&nbsp;</div><div class=\"line number5 index4 alt2\"><code class=\"xml plain\">StartServers2#推荐设置：小=默认中=3~5大=5~10</code></div><div class=\"line number6 index5 alt1\">&nbsp;</div><div class=\"line number7 index6 alt2\"><code class=\"xml plain\">MaxClients150#推荐设置：小=500中=500~1500大型=1500~3000</code></div><div class=\"line number8 index7 alt1\">&nbsp;</div><div class=\"line number9 index8 alt2\"><code class=\"xml plain\">MinSpareThreads25#推荐设置：小=默认中=50~100大=100~200</code></div><div class=\"line number10 index9 alt1\">&nbsp;</div><div class=\"line number11 index10 alt2\"><code class=\"xml plain\">MaxSpareThreads75#推荐设置：小=默认中=80~160大=200~400</code></div><div class=\"line number12 index11 alt1\">&nbsp;</div><div class=\"line number13 index12 alt2\"><code class=\"xml plain\">ThreadsPerChild25#推荐设置：小=默认中=50~100大型=100~200</code></div><div class=\"line number14 index13 alt1\">&nbsp;</div><div class=\"line number15 index14 alt2\"><code class=\"xml plain\">MaxRequestsPerChild0#推荐设置：小=10000中或大=10000~50000</code></div><div class=\"line number16 index15 alt1\">&nbsp;</div><div class=\"line number17 index16 alt2\"><code class=\"xml plain\">(此外，如果MaxClients/ThreadsPerChild大于16，还需额外设置ServerLimit参数，ServerLimit必须大于等于MaxClients/ThreadsPerChild的值。)</code></div><div class=\"line number18 index17 alt1\">&nbsp;</div><div class=\"line number19 index18 alt2\"><code class=\"xml plain\">&lt;/</code><code class=\"xml keyword\">IfModule</code><code class=\"xml plain\">&gt;</code></div></td></tr></tbody></table><p>对应的配置参数作用如下表：</p><table><tbody><tr class=\"firstRow\"><th width=\"131\"><p>参数名称</p></th><th width=\"564\"><p>参数作用</p></th></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>StartServers</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>启动Apache时创建的子进程数。</strong></p></td></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>MinSpareServers</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>处于空闲状态的最小子进程数</strong>。(所谓空闲子进程是指没有正在处理请求的子进程。如果当前空闲子进程数少于MinSpareServers，那么Apache将以最大每秒一个的速度产生新的子进程。只有在非常繁忙机器上才需要调整这个参数。此值不宜过大。)</p></td></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>MaxSpareServers</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>处于空闲状态的最大子进程数。</strong>(只有在非常繁忙<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%BA%E5%99%A8\">机器</a>上才需要调整这个参数。此值不宜过大。如果你将该指令的值设置为比MinSpareServers小，Apache将会自动将其修改成MinSpareServers+1。)</p></td></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>MaxClients</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>允许同时连接的最大请求数量。</strong></p><p>1、任何超过MaxClients限制的请求都将进入等待队列，直到达到ListenBacklog指令限制的最大值为止</p><p>2、对于非线程型的MPM(也就是mpm_prefork)，MaxClients表示可以用于处理客户端请求的最大子进程数量，默认值是256。要增大这个值，你必须同时增大ServerLimit。</p><p>3、对于线程型或者混合型的MPM(也就是mpm_beos或mpm_worker)，MaxClients表示可以用于处理<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF\">客户端</a>请求的最大线程数量。线程型的mpm_beos的默认值是50。对于混合型的MPM默认值是16(ServerLimit)乘以25(ThreadsPerChild)的结果。因此要将MaxClients增加到超过16个进程才能提供的时候，你必须同时增加ServerLimit的值。</p></td></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>MinSpareThreads</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>处于空闲状态的最小线程数。</strong></p><p>(注：不同的MPM对这个指令的处理是不一样的：mpm_worker的默认值是75。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太少，子进程将产生新的空闲线程。mpm_netware的默认值是10。既然这个MPM只运行单独一个子进程，此MPM当然亦基于整个<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>监视空闲线程数。mpm_beos和mpmt_os2的工作方式与mpm_netware差不多，mpm_beos的默认值是1；mpmt_os2的默认值是5。)</p></td></tr><tr><td width=\"131\" valign=\"top\" align=\"left\"><p><strong>MaxSpareThreads</strong></p></td><td width=\"564\" valign=\"top\" align=\"left\"><p><strong>处于空闲状态的最大线程数。</strong></p><p>(注：不同的MPM对这个指令的处理是不一样的：mpm_worker的默认值是250。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太多，子进程将杀死多余的空闲线程。mpm_netware的默认值是100。既然这个MPM只运行单独一个子进程，此MPM当然亦基于整个服务器监视空闲线程数。mpm_beos和mpmt_os2的工作方式与mpm_netware差不多，mpm_beos的默认值是50；mpmt_os2的默认值是10。)</p></td></tr></tbody></table><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>备注：ServerLimit表示Apache允许创建的最大进程数。值得注意的是，Apache在编译时内部有一个硬限制ServerLimit20000(对于mpm_prefork模块为ServerLimit200000)。你不能超越这个限制。</p><p>使用这个指令时要特别当心。如果将ServerLimit设置成一个高出实际需要许多的值，将会有过多的共享内存被分配。如果将ServerLimit和MaxClients设置成超过系统的处理能力，Apache可能无法启动，或者系统将变得不稳定。</p></td></tr></tbody></table><table><tbody><tr class=\"firstRow\"><td width=\"696\" valign=\"top\" align=\"left\"><p>注意：在配置相关参数时，请先保证服务器具备足够的硬件性能(例如：CPU、内存等)。如果发现自启动后，随着<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>的运行时间增加，服务器的内存占用也随之增加，可能是程序中出现内存泄露，请向下调整参数MaxRequestsPerChild的值以降低内存泄露带来的影响，然后尽快找出程序中的问题之所在。</p></td></tr></tbody></table><p><a class=\"lemma-anchor para-title\"></a><a class=\"lemma-anchor \"></a><a class=\"lemma-anchor \"></a></p><h2 class=\"title-text\">相关替代品</h2><p><a class=\"edit-icon j-edit-link\" style=\"display: block;\"><em class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></em>编辑</a></p><p>Apache是目前最流行的Web应用服务器，占据了互联网应用服务器70%以上的份额。Apache能取得如此成功并不足为奇：它免费、稳定且性能卓越；但Apache能取得如此佳绩的另一个原因是，当时互联网刚刚兴起时，Apache是第一个可用的Web应用服务器，人们没有其他的选择。</p><p>不可否认，Apache是一个优秀的全能Web服务器，但对于那些需要更强大的Web应用服务器（比如大小、可定制、响应速度、可扩展性等方面）的人而言，Apache明显不符合他们的要求，寻找Apache的替代者是更好的选择。</p><p>下面所列出的是当前可以替代Apache的几个热门Web应用服务器，他们的特点和适用的应用场景各不相同，但都是针对Apache所不够擅长的某一方面设计的。</p><p><strong>1、Lighttpd</strong></p><p><a class=\"image-link\" href=\"https://baike.baidu.com/pic/apache/6265/0/5202e5f2f4cf9a4fb17ec51f?fr=lemma&ct=single\" target=\"_blank\" title=\"\" style=\"width:220px;height:210.94650205761px;\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/1b4c510fd9f9d72a26872c71d42a2834359bbbfe?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"\"/></a></p><p>最流行的Apache服务器替代者，Lig<a target=\"_blank\" href=\"https://baike.baidu.com/item/http\">http</a>d是一个单线程的针对大量持续连接做出专门优化的Web服务器（这正是多数高流量网站和应用程序需要的）。众多的流行Web站点选择<strong>Lighttpd</strong>，包括Youtube、SourceForge和维基百科。Lighttpd支持FastCGI、HTTP服务器端压缩、mod-rewrite和其他众多有用的功能。尽管Lighttpd拥有Apache的绝大多数功能，但它仍然保持轻量级（仅1MB）并且可以与Apache使用相同的配置。</p><p><strong>2、Nginx</strong></p><p><a class=\"image-link\" href=\"https://baike.baidu.com/pic/apache/6265/0/a836271258f9b90df919b8e4?fr=lemma&ct=single\" target=\"_blank\" title=\"\" style=\"width:220px;height:83.018867924528px;\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/a50f4bfbfbedab64e8ad71acf736afc378311efa?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"\"/></a></p><p>Nginx是一个来自<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BF%84%E7%BD%97%E6%96%AF\">俄罗斯</a>的流行的Web应用服务器，它被应用于大量的俄罗斯的高并发站点，俄罗斯的搜索引擎网站Rambler就是基于Nginx构建的。Nginx对静态页面的支持相当出色，轻量且免费。Nginx不支持CGI，但是支持更灵活的FastCGI。PHP5.2及之前的版本比较多的是使用PHP-FPM来管理PHP\r\n FastCGI进程。PHP-FPM使用给PHP源码打补丁后编译的方式让新手多少有些难上手，但从PHP \r\n5.3.2开始内置PHP-FPM，只需编译PHP时启用PHP-FPM。</p><p><strong>3、kangle</strong></p><p><a target=\"_blank\" href=\"https://baike.baidu.com/item/kangle\">kangle</a> <a target=\"_blank\" href=\"https://baike.baidu.com/item/web%E6%9C%8D%E5%8A%A1%E5%99%A8\">web服务器</a>（简称：kangle）是一款跨平台、功能强大、安全稳定、易操作的高性能<a target=\"_blank\" href=\"https://baike.baidu.com/item/web%E6%9C%8D%E5%8A%A1%E5%99%A8\">web服务器</a>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86\">反向代理</a><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6\">服务器软件</a>。除此：kangle也是一款专为做<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">虚拟主机</a>研发的<a target=\"_blank\" href=\"https://baike.baidu.com/item/web%E6%9C%8D%E5%8A%A1%E5%99%A8\">web服务器</a>。实现<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">虚拟主机</a>独立进程、独立身份运行。用户之间安全隔离，一个用户出问题不影响其他用户。安全支持php、asp、asp·net、java、ruby等多种动态开发语言。</p><p><strong>4、Boa</strong></p><p><a class=\"image-link\" href=\"https://baike.baidu.com/pic/apache/6265/0/a6c7d717e1db6e55c83d6de6?fr=lemma&ct=single\" target=\"_blank\" title=\"\" style=\"width:220px;height:54.45px;\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/9358d109b3de9c824fbdc5e36c81800a18d84385?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"\"/></a></p><p>很多的网站管理员对在硬件配置较低的服务器上使用轻量级的Boa作为Web服务器极其信赖。Boa是一个单<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BA%BF%E7%A8%8B\">线程</a>的HTTP服务器，这意味着Boa只能依次完成用户的请求而不会fork新的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B\">进程</a>来处理并发请求。Boa的设计目的是速度和安全，对于运行于单服务器的流行Web<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AB%99%E7%82%B9\">站点</a>而言，Boa是一个好的选择。</p><p><strong>5、Jigsaw</strong></p><p><a class=\"image-link\" href=\"https://baike.baidu.com/pic/apache/6265/0/a8ad94136ecf6b8cf6039ee1?fr=lemma&ct=single\" target=\"_blank\" title=\"\" style=\"width:148px;height:111px;\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/8601a18b87d6277f93c70e5428381f30e824fc80?x-bce-process=image/resize,m_lfit,w_148,limit_1\" alt=\"\"/></a></p><p>Jigsaw是W3C推出的开源的Web服务器平台，使用Java语言编写，可以安装在有Java运行环境的系统上。做为W3C（World Wide Web Consortium）<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BC%80%E5%8F%91\">开发</a>的服务器产品，其作用主要是对新技术的实现做一个例示，而非一个全功能的商业服务器产品。不过就Jigsaw 2.0版本而言，它的功能还是超过了Web<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>的平均水平。最重要的是，它体现了未来<a target=\"_blank\" href=\"https://baike.baidu.com/item/HTTP%E5%8D%8F%E8%AE%AE\">HTTP协议</a>和基于对象的Web服务器技术的发展。如果你希望你的平台支持所有下一代技术，Jigsaw是一个好的选择。</p><p>以上所提到的四个Apache Web服务器的替代者只是众多优秀应用服务器产品的一部分。</p><p><br/></p>', '0', '8', '1598107834', '1598107834', null);
INSERT INTO `tp_article` VALUES ('13', 'Apache安装', 'zjh', 'Apache是世界使用排名第一的Web服务器软件。它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩充，将Perl/Python等解释器编译到服务器中。同时Apache音译为阿帕奇，是北美印第安人的一个部落，叫阿帕奇族，在美国的西南部。也是一个基金会的名称、一种武装直升机等等。', 'apache', '7', '0', '<p><span style=\"color: #ff0000\"><strong>一、Apache的下载</strong></span></p><p>1、点击链接<a target=\"_blank\" href=\"http://httpd.apache.org/download.cgi\">http://httpd.apache.org/download.cgi</a>，找到所需版本，如下图位置：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/201712221349408.png\"/></p><p>2、点击所需版本，选择Windows文件格式，如下图位置：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/201712221349409.png\"/></p><p>3、找到Downloading Apache for Windows栏，进入下载页，如下图位置：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494010.jpg\"/></p><p>4、找到Apache 2.4 Server Binaries栏，分别有32位和64位，点击图标下载，如下图位置：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494011.png\"/></p><p><span style=\"color: #ff0000\"><strong>二、Apache的安装</strong></span></p><p>1、将压缩包解压到需要安装的目录，以D盘为例，效果如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494012.jpg\"/></p><p>2、解压后名称为Apache24（可自定义），打开找到conf目录，进入找到配置文件httpd.conf打开，更改服务路径及端口，配置如下：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494013.jpg\"/></p><p>3、保存配置，打开CMD窗口，进入服务bin目录，输入安装命令（httpd -k install）开始安装服务，如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494014.png\"/></p><p>4、正常安装完毕效果如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494015.png\"/></p><p>5、输入启动命令（net start apache2.4）启动服务，启动成功效果如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494016.png\"/></p><p>6、打开浏览器，输入网址（http://localhost/）访问，效果如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494117.png\"/></p><p>至此，服务安装完成，若在上述某个步骤出错或有不明确的地方，请留言给我。</p><p>补充：除了上述启动方式，也可以通过Apache自带的管理窗口进行启动和关闭，效果如下图所示：</p><p style=\"text-align: center\"><img alt=\"\" src=\"https://img.jbzj.com/file_images/article/201712/2017122213494118.jpg\"/></p><p><span style=\"color: #ff0000\"><strong>总结</strong></span></p><p>以上所述是小编给大家介绍的Apache 服务器最新版下载、安装及配置教程图解（Windows版），希望对大家有所帮助，如果大家有任何疑问请给我留言，小编会及时回复大家的。在此也非常感谢大家对脚本之家的支持！</p><p><br/></p>', '0', '8', '1598107923', '1598107923', null);

-- ----------------------------
-- Table structure for tp_cate
-- ----------------------------
DROP TABLE IF EXISTS `tp_cate`;
CREATE TABLE `tp_cate` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `catename` varchar(20) NOT NULL COMMENT '导航名称',
  `sort` int(11) NOT NULL,
  `create_time` int(11) NOT NULL COMMENT '添加时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '软删除时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_cate
-- ----------------------------
INSERT INTO `tp_cate` VALUES ('1', 'php', '4', '1595818346', '1596002788', null);
INSERT INTO `tp_cate` VALUES ('2', 'Mysql', '2', '1595818567', '1595827174', null);
INSERT INTO `tp_cate` VALUES ('3', 'Java', '3', '1595818592', '1598107581', '1598107581');
INSERT INTO `tp_cate` VALUES ('4', 'C++', '4', '1595818619', '1598107573', '1598107573');
INSERT INTO `tp_cate` VALUES ('7', 'Apach', '5', '1595839421', '1598107638', '1598107638');
INSERT INTO `tp_cate` VALUES ('8', 'Apache', '1', '1598107682', '1598107682', null);

-- ----------------------------
-- Table structure for tp_comment
-- ----------------------------
DROP TABLE IF EXISTS `tp_comment`;
CREATE TABLE `tp_comment` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '评论内容',
  `article_id` int(11) NOT NULL COMMENT '评论文章',
  `member_id` int(11) NOT NULL COMMENT '评论用户',
  `create_time` int(11) NOT NULL COMMENT '评论时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '删除时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_comment
-- ----------------------------
INSERT INTO `tp_comment` VALUES ('1', '这篇文章真不错！', '1', '1', '1596002788', '1596002788', null);
INSERT INTO `tp_comment` VALUES ('2', '666', '2', '2', '1596002788', '1598091869', '1598091869');
INSERT INTO `tp_comment` VALUES ('3', 'nice', '2', '1', '1598091031', '1598091859', '1598091859');

-- ----------------------------
-- Table structure for tp_member
-- ----------------------------
DROP TABLE IF EXISTS `tp_member`;
CREATE TABLE `tp_member` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `password` varchar(20) NOT NULL COMMENT '密码',
  `nickname` varchar(20) NOT NULL COMMENT '昵称',
  `email` varchar(20) DEFAULT NULL COMMENT '邮箱',
  `create_time` int(11) NOT NULL COMMENT '注册时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '删除时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_member
-- ----------------------------
INSERT INTO `tp_member` VALUES ('1', 'admin', 'admin', 'nick', 'admin@163.com', '1595911703', '1595911703', null);
INSERT INTO `tp_member` VALUES ('2', 'admin01', '123', 'admin01修改', 'admin01@163.com', '1595912454', '1596002077', null);
INSERT INTO `tp_member` VALUES ('3', 'zzz', 'zzz', 'zzz', 'zzz@163.com', '1598085932', '1598085932', null);
INSERT INTO `tp_member` VALUES ('4', 'aaa', '123', 'aaa', '1@qq.com', '1598678606', '1598678606', null);

-- ----------------------------
-- Table structure for tp_system
-- ----------------------------
DROP TABLE IF EXISTS `tp_system`;
CREATE TABLE `tp_system` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `webname` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '网站名字',
  `copyright` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '版权信息',
  `create_time` int(11) NOT NULL COMMENT '设置时间',
  `update_time` int(11) NOT NULL COMMENT '更新时间',
  `delete_time` int(11) DEFAULT NULL COMMENT '删除时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tp_system
-- ----------------------------
INSERT INTO `tp_system` VALUES ('1', 'zjh', 'www.zjhphp.cn', '0', '1596027749', null);
